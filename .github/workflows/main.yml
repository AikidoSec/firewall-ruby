name: Ruby

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build (Ruby ${{ matrix.ruby }})
    strategy:
      matrix:
        ruby:
          - "3.3"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Run the unit tests
      run: bundle exec rake


  e2e:
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: cats_test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries=3

    runs-on: ubuntu-latest
    name: End to end tests (Ruby ${{ matrix.ruby }}, App ${{ matrix.app }})
    strategy:
      matrix:
        ruby:
          - "3.3"
        app:
          - "rails7.1_mysql2"
          - "rails7.1_trilogy"
          - "rails7.1_postgresql"
          - "rails7.1_sqlite3"
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/sample_apps/${{ matrix.app }}/Gemfile
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: password

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Run the e2e tests
      run: "bundle exec rake e2e:${{ matrix.app }}"
