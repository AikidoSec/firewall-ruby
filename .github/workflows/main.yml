name: Ruby

on:
  push:

jobs:
  build:
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: cats_test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries=3

    runs-on: ubuntu-latest
    name: Build (Ruby ${{ matrix.ruby }})
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "3.3"
          - "3.2"
          - "3.1"
          - "3.0"
          - "2.7"
    env:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: password
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/ruby-${{ matrix.ruby }}.gemfile

    steps:
    - uses: actions/checkout@v4
    - name: Install any system dependencies
      run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Run the unit tests
      run: bundle exec rake test
    - name: Lint the code
      run: bundle exec rake standard


  e2e:
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: cats_test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries=3

    runs-on: ubuntu-latest
    name: End to end tests (Ruby ${{ matrix.ruby }}, DB ${{ matrix.db }}, App ${{ matrix.app }})
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "3.3"
          - "3.2"
          - "3.1"
          - "3.0"
          - "2.7"
        app:
          - "rails7.1_sql_injection"
        db:
          - "mysql2"
          - "trilogy"
          - "postgresql"
          - "sqlite3"
        include:
          - app: "rails7.1_sql_injection"
            db: "mysql2"
            env: "DATABASE_URL=mysql2://root:@127.0.0.1:3306/cats_test"
          - app: "rails7.1_sql_injection"
            db: "trilogy"
            env: "DATABASE_URL=trilogy://root:@127.0.0.1:3306/cats_test"
          - app: "rails7.1_sql_injection"
            db: "postgresql"
            env: "DATABASE_URL=postgresql://postgres:password@127.0.0.1:5432/cats_test"
          - app: "rails7.1_sql_injection"
            db: "sqlite3"
            env: "DATABASE_URL=sqlite3:storage/test.salite3"
        exclude:
          - ruby: "2.7"
            db: "trilogy"
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/sample_apps/${{ matrix.app }}/gemfiles/ruby-${{ matrix.ruby }}.gemfile

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Set any matrix-defined ENV
      run: echo "${{ matrix.env }}" >> "$GITHUB_ENV"
      if: ${{ matrix.env }}
    - name: Remove the in-repo database config
      run: rm -f ${{ github.workspace }}/sample_apps/${{ matrix.app }}/config/database.yml
    - name: Run the e2e tests
      run: "bundle exec rake e2e:${{ matrix.app }}"
