# frozen_string_literal: true

require "rake"
require "rake/clean"
require "rubygems/package"
require "fileutils"

GEM_NAMES = %w[aikido]

# Clean up created files
CLEAN.include("LICENSE")
CLEAN.include(*GEM_NAMES.map { |name| "#{name}.gemspec" })
CLEAN.include(*GEM_NAMES.map { |name| "lib/#{name}.rb" })
CLOBBER.include(*GEM_NAMES.map { |name| "#{name}-*.gem" })

namespace :build do
  GEM_NAMES.each do |gem_name|
    file "LICENSE" => ["../LICENSE"] do
      FileUtils.cp("../LICENSE", "LICENSE")
      puts "Copied LICENSE"
    end

    entry_point_path = "lib/#{gem_name}.rb"

    # Generate the entry point file from template if needed
    file entry_point_path => ["lib/placeholder.rb.template"] do
      template = File.read("lib/placeholder.rb.template")
      content = template.gsub("@GEM_NAME", gem_name)
      File.write(entry_point_path, content)
      puts "Generated #{entry_point_path}"
    end

    gemspec_path = "#{gem_name}.gemspec"

    # Generate gemspec file from template if needed
    file gemspec_path => ["placeholder.gemspec.template"] do
      template = File.read("placeholder.gemspec.template")
      content = template.gsub("@GEM_NAME", gem_name)
      File.write(gemspec_path, content)
      puts "Generated #{gemspec_path}"
    end

    desc "Build the #{gem_name} gem"
    task gem_name => [entry_point_path, gemspec_path, "LICENSE"] do
      gemspec = Gem::Specification.load(gemspec_path)
      raise "Failed to load gemspec: #{gemspec_path}" unless gemspec

      gem_path = Gem::Package.build(gemspec)
      puts "Built #{gem_path}"
    end
  end

  desc "Build all gems"
  task all: GEM_NAMES.map { |gem_name| "build:#{gem_name}" }
end

namespace :release do
  GEM_NAMES.each do |gem_name|
    gemspec_path = "#{gem_name}.gemspec"

    desc "Build and publish the #{gem_name} to RubyGems"
    task gem_name => ["build:#{gem_name}"] do
      gemspec = Gem::Specification.load(gemspec_path)
      raise "Failed to load gemspec: #{gemspec_path}" unless gemspec

      gem_path = "#{gemspec.name}-#{gemspec.version}.gem"

      puts "Publishing #{gem_path} to RubyGem..."
      sh "gem push #{gem_path}"
    end
  end

  desc "Build and publish all gems to RubyGems"
  task all: GEM_NAMES.map { |gem_name| "release:#{gem_name}" }
end
